%% coding: utf-8
{script,
    {"chronus","0.1.0"},
    [{preLoaded,
         [atomics,counters,erl_init,erl_prim_loader,erl_tracer,erlang,
          erts_code_purger,erts_dirty_process_signal_handler,erts_internal,
          erts_literal_area_collector,init,persistent_term,prim_buffer,
          prim_eval,prim_file,prim_inet,prim_net,prim_socket,prim_zip,
          socket_registry,zlib]},
     {progress,preloaded},
     {path,["$ROOT/lib/kernel-9.2.3/ebin","$ROOT/lib/stdlib-5.2.2/ebin"]},
     {primLoad,
         [error_handler,application,application_controller,application_master,
          code,code_server,erl_eval,erl_lint,erl_parse,error_logger,ets,file,
          filename,file_server,file_io_server,gen,gen_event,gen_server,heart,
          kernel,logger,logger_filters,logger_server,logger_backend,
          logger_config,logger_simple_h,lists,proc_lib,supervisor]},
     {kernel_load_completed},
     {progress,kernel_load_completed},
     {path,["$ROOT/lib/kernel-9.2.3/ebin"]},
     {primLoad,
         [application_starter,auth,disk_log,disk_log_1,disk_log_server,
          disk_log_sup,dist_ac,dist_util,erl_boot_server,erl_compile_server,
          erl_ddll,erl_distribution,erl_epmd,erl_erts_errors,
          erl_kernel_errors,erl_reply,erl_signal_handler,erpc,erts_debug,
          gen_sctp,gen_tcp,gen_tcp_socket,gen_udp,gen_udp_socket,global,
          global_group,global_search,group,group_history,inet,inet6_sctp,
          inet6_tcp,inet6_tcp_dist,inet6_udp,inet_config,inet_db,inet_dns,
          inet_epmd_dist,inet_epmd_socket,inet_gethost_native,inet_hosts,
          inet_parse,inet_res,inet_sctp,inet_tcp,inet_tcp_dist,inet_udp,
          kernel_config,kernel_refc,local_tcp,local_udp,logger_disk_log_h,
          logger_formatter,logger_h_common,logger_handler_watcher,logger_olp,
          logger_proxy,logger_std_h,logger_sup,net,net_adm,net_kernel,os,pg,
          pg2,prim_tty,ram_file,raw_file_io,raw_file_io_compressed,
          raw_file_io_deflate,raw_file_io_delayed,raw_file_io_inflate,
          raw_file_io_list,rpc,seq_trace,socket,standard_error,user_drv,
          user_sup,wrap_log_reader]},
     {path,["$ROOT/lib/stdlib-5.2.2/ebin"]},
     {primLoad,
         [argparse,array,base64,beam_lib,binary,c,calendar,dets,dets_server,
          dets_sup,dets_utils,dets_v9,dict,digraph,digraph_utils,edlin,
          edlin_context,edlin_expand,edlin_key,edlin_type_suggestion,epp,
          erl_abstract_code,erl_anno,erl_bits,erl_compile,erl_error,
          erl_expand_records,erl_features,erl_internal,erl_posix_msg,erl_pp,
          erl_scan,erl_stdlib_errors,erl_tar,error_logger_file_h,
          error_logger_tty_h,escript,eval_bits,file_sorter,filelib,gb_sets,
          gb_trees,gen_fsm,gen_statem,io,io_lib,io_lib_format,io_lib_fread,
          io_lib_pretty,log_mf_h,maps,math,ms_transform,orddict,ordsets,
          otp_internal,peer,pool,proplists,qlc,qlc_pt,queue,rand,random,re,
          sets,shell,shell_default,shell_docs,slave,sofs,string,
          supervisor_bridge,sys,timer,unicode,unicode_util,uri_string,
          win32reg,zip]},
     {path,["$ROOT/lib/compiler-8.4.3/ebin"]},
     {primLoad,
         [beam_a,beam_asm,beam_block,beam_bounds,beam_call_types,beam_clean,
          beam_dict,beam_digraph,beam_disasm,beam_flatten,beam_jump,
          beam_kernel_to_ssa,beam_listing,beam_opcodes,beam_ssa,
          beam_ssa_alias,beam_ssa_bc_size,beam_ssa_bool,beam_ssa_bsm,
          beam_ssa_check,beam_ssa_codegen,beam_ssa_dead,beam_ssa_lint,
          beam_ssa_opt,beam_ssa_pp,beam_ssa_pre_codegen,
          beam_ssa_private_append,beam_ssa_recv,beam_ssa_share,beam_ssa_throw,
          beam_ssa_type,beam_trim,beam_types,beam_utils,beam_validator,beam_z,
          cerl,cerl_clauses,cerl_inline,cerl_trees,compile,core_lib,core_lint,
          core_parse,core_pp,core_scan,erl_bifs,rec_env,sys_core_alias,
          sys_core_bsm,sys_core_fold,sys_core_fold_lists,sys_core_inline,
          sys_core_prepare,sys_messages,sys_pre_attributes,v3_core,v3_kernel,
          v3_kernel_pp]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/elixir-1.16.0/ebin"]},
     {primLoad,
         ['Elixir.Access','Elixir.Agent','Elixir.Agent.Server',
          'Elixir.Application','Elixir.ArgumentError',
          'Elixir.ArithmeticError','Elixir.Atom','Elixir.BadArityError',
          'Elixir.BadBooleanError','Elixir.BadFunctionError',
          'Elixir.BadMapError','Elixir.BadStructError','Elixir.Base',
          'Elixir.Behaviour','Elixir.Bitwise','Elixir.Calendar',
          'Elixir.Calendar.ISO','Elixir.Calendar.TimeZoneDatabase',
          'Elixir.Calendar.UTCOnlyTimeZoneDatabase','Elixir.CaseClauseError',
          'Elixir.Code','Elixir.Code.Formatter','Elixir.Code.Fragment',
          'Elixir.Code.Identifier','Elixir.Code.LoadError',
          'Elixir.Code.Normalizer','Elixir.Code.Typespec',
          'Elixir.Collectable','Elixir.Collectable.BitString',
          'Elixir.Collectable.File.Stream','Elixir.Collectable.HashDict',
          'Elixir.Collectable.HashSet','Elixir.Collectable.IO.Stream',
          'Elixir.Collectable.List','Elixir.Collectable.Map',
          'Elixir.Collectable.MapSet','Elixir.CompileError',
          'Elixir.CondClauseError','Elixir.Config','Elixir.Config.Provider',
          'Elixir.Config.Reader','Elixir.Date','Elixir.Date.Range',
          'Elixir.DateTime','Elixir.Dict','Elixir.DynamicSupervisor',
          'Elixir.Enum','Elixir.Enum.EmptyError',
          'Elixir.Enum.OutOfBoundsError','Elixir.Enumerable',
          'Elixir.Enumerable.Date.Range','Elixir.Enumerable.File.Stream',
          'Elixir.Enumerable.Function','Elixir.Enumerable.GenEvent.Stream',
          'Elixir.Enumerable.HashDict','Elixir.Enumerable.HashSet',
          'Elixir.Enumerable.IO.Stream','Elixir.Enumerable.List',
          'Elixir.Enumerable.Map','Elixir.Enumerable.MapSet',
          'Elixir.Enumerable.Range','Elixir.Enumerable.Stream',
          'Elixir.ErlangError','Elixir.Exception','Elixir.File',
          'Elixir.File.CopyError','Elixir.File.Error','Elixir.File.LinkError',
          'Elixir.File.RenameError','Elixir.File.Stat','Elixir.File.Stream',
          'Elixir.Float','Elixir.Function','Elixir.FunctionClauseError',
          'Elixir.GenEvent','Elixir.GenEvent.Stream','Elixir.GenServer',
          'Elixir.HashDict','Elixir.HashSet','Elixir.IO','Elixir.IO.ANSI',
          'Elixir.IO.ANSI.Docs','Elixir.IO.ANSI.Sequence','Elixir.IO.Stream',
          'Elixir.IO.StreamError','Elixir.Inspect','Elixir.Inspect.Algebra',
          'Elixir.Inspect.Any','Elixir.Inspect.Atom',
          'Elixir.Inspect.BitString','Elixir.Inspect.Date',
          'Elixir.Inspect.Date.Range','Elixir.Inspect.DateTime',
          'Elixir.Inspect.Error','Elixir.Inspect.Float',
          'Elixir.Inspect.Function','Elixir.Inspect.HashDict',
          'Elixir.Inspect.HashSet','Elixir.Inspect.Inspect.Error',
          'Elixir.Inspect.Integer','Elixir.Inspect.List',
          'Elixir.Inspect.Macro.Env','Elixir.Inspect.Map',
          'Elixir.Inspect.MapSet','Elixir.Inspect.NaiveDateTime',
          'Elixir.Inspect.Opts','Elixir.Inspect.PID','Elixir.Inspect.Port',
          'Elixir.Inspect.Range','Elixir.Inspect.Reference',
          'Elixir.Inspect.Regex','Elixir.Inspect.Stream',
          'Elixir.Inspect.Time','Elixir.Inspect.Tuple','Elixir.Inspect.URI',
          'Elixir.Inspect.Version','Elixir.Inspect.Version.Requirement',
          'Elixir.Integer','Elixir.Kernel','Elixir.Kernel.CLI',
          'Elixir.Kernel.ErrorHandler','Elixir.Kernel.LexicalTracker',
          'Elixir.Kernel.ParallelCompiler','Elixir.Kernel.ParallelRequire',
          'Elixir.Kernel.SpecialForms','Elixir.Kernel.Typespec',
          'Elixir.Kernel.TypespecError','Elixir.Kernel.Utils',
          'Elixir.KeyError','Elixir.Keyword','Elixir.List',
          'Elixir.List.Chars','Elixir.List.Chars.Atom',
          'Elixir.List.Chars.BitString','Elixir.List.Chars.Float',
          'Elixir.List.Chars.Integer','Elixir.List.Chars.List','Elixir.Macro',
          'Elixir.Macro.Env','Elixir.Map','Elixir.MapSet','Elixir.MatchError',
          'Elixir.MismatchedDelimiterError','Elixir.Module',
          'Elixir.Module.LocalsTracker','Elixir.Module.ParallelChecker',
          'Elixir.Module.Types','Elixir.Module.Types.Behaviour',
          'Elixir.Module.Types.Error','Elixir.Module.Types.Expr',
          'Elixir.Module.Types.Helpers','Elixir.Module.Types.Of',
          'Elixir.Module.Types.Pattern','Elixir.Module.Types.Unify',
          'Elixir.NaiveDateTime','Elixir.Node','Elixir.OptionParser',
          'Elixir.OptionParser.ParseError','Elixir.PartitionSupervisor',
          'Elixir.Path','Elixir.Path.Wildcard','Elixir.Port','Elixir.Process',
          'Elixir.Protocol','Elixir.Protocol.UndefinedError','Elixir.Range',
          'Elixir.Record','Elixir.Record.Extractor','Elixir.Regex',
          'Elixir.Regex.CompileError','Elixir.Registry',
          'Elixir.Registry.Partition','Elixir.Registry.Supervisor',
          'Elixir.RuntimeError','Elixir.Set','Elixir.Stream',
          'Elixir.Stream.Reducers','Elixir.String','Elixir.String.Break',
          'Elixir.String.Chars','Elixir.String.Chars.Atom',
          'Elixir.String.Chars.BitString','Elixir.String.Chars.Date',
          'Elixir.String.Chars.DateTime','Elixir.String.Chars.Float',
          'Elixir.String.Chars.Integer','Elixir.String.Chars.List',
          'Elixir.String.Chars.NaiveDateTime','Elixir.String.Chars.Time',
          'Elixir.String.Chars.URI','Elixir.String.Chars.Version',
          'Elixir.String.Chars.Version.Requirement','Elixir.String.Tokenizer',
          'Elixir.String.Tokenizer.ScriptSet',
          'Elixir.String.Tokenizer.Security','Elixir.String.Unicode',
          'Elixir.StringIO','Elixir.Supervisor','Elixir.Supervisor.Default',
          'Elixir.Supervisor.Spec','Elixir.SyntaxError','Elixir.System',
          'Elixir.System.EnvError','Elixir.System.SignalHandler',
          'Elixir.SystemLimitError','Elixir.Task','Elixir.Task.Supervised',
          'Elixir.Task.Supervisor','Elixir.Time','Elixir.TokenMissingError',
          'Elixir.TryClauseError','Elixir.Tuple','Elixir.URI',
          'Elixir.URI.Error','Elixir.UndefinedFunctionError',
          'Elixir.UnicodeConversionError','Elixir.Version',
          'Elixir.Version.InvalidRequirementError',
          'Elixir.Version.InvalidVersionError','Elixir.Version.Parser',
          'Elixir.Version.Requirement','Elixir.WithClauseError',elixir,
          elixir_aliases,elixir_bitstring,elixir_bootstrap,elixir_clauses,
          elixir_code_server,elixir_compiler,elixir_config,elixir_def,
          elixir_dispatch,elixir_env,elixir_erl,elixir_erl_clauses,
          elixir_erl_compiler,elixir_erl_for,elixir_erl_pass,elixir_erl_try,
          elixir_erl_var,elixir_errors,elixir_expand,elixir_fn,elixir_import,
          elixir_interpolation,elixir_lexical,elixir_locals,elixir_map,
          elixir_module,elixir_overridable,elixir_parser,elixir_quote,
          elixir_rewrite,elixir_sup,elixir_tokenizer,elixir_utils,iex]},
     {path,["$ROOT/lib/sasl-4.2.1/ebin"]},
     {primLoad,
         [alarm_handler,erlsrv,format_lib_supp,misc_supp,rb,rb_format_supp,
          release_handler,release_handler_1,sasl,sasl_report,
          sasl_report_file_h,sasl_report_tty_h,systools,systools_lib,
          systools_make,systools_rc,systools_relup]},
     {path,["$ROOT/lib/crypto-5.4.2/ebin"]},
     {primLoad,[crypto,crypto_ec_curves]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/credentials_obfuscation-3.4.0/ebin"]},
     {primLoad,
         [credentials_obfuscation,credentials_obfuscation_app,
          credentials_obfuscation_pbe,credentials_obfuscation_sup,
          credentials_obfuscation_svc]},
     {path,["$ROOT/lib/asn1-5.2.2/ebin"]},
     {primLoad,[asn1rt_nif]},
     {path,["$ROOT/lib/public_key-1.15.1/ebin"]},
     {primLoad,
         ['OTP-PUB-KEY','PKCS-FRAME',pubkey_cert,pubkey_cert_records,
          pubkey_crl,pubkey_ocsp,pubkey_os_cacerts,pubkey_pbe,pubkey_pem,
          pubkey_policy_tree,pubkey_ssh,public_key]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/recon-2.5.3/ebin"]},
     {primLoad,[recon,recon_alloc,recon_lib,recon_map,recon_rec,recon_trace]},
     {path,["$ROOT/lib/ssl-11.1.3/ebin"]},
     {primLoad,
         [dtls_connection,dtls_connection_sup,dtls_gen_connection,
          dtls_handshake,dtls_listener_sup,dtls_packet_demux,dtls_record,
          dtls_server_session_cache_sup,dtls_server_sup,dtls_socket,dtls_sup,
          dtls_v1,inet6_tls_dist,inet_tls_dist,ssl,ssl_admin_sup,ssl_alert,
          ssl_app,ssl_certificate,ssl_cipher,ssl_cipher_format,
          ssl_client_session_cache_db,ssl_config,ssl_connection_sup,ssl_crl,
          ssl_crl_cache,ssl_crl_cache_api,ssl_crl_hash_dir,ssl_dh_groups,
          ssl_dist_admin_sup,ssl_dist_connection_sup,ssl_dist_sup,
          ssl_gen_statem,ssl_handshake,ssl_listen_tracker_sup,ssl_logger,
          ssl_manager,ssl_pem_cache,ssl_pkix_db,ssl_record,
          ssl_server_session_cache,ssl_server_session_cache_db,
          ssl_server_session_cache_sup,ssl_session,ssl_session_cache_api,
          ssl_srp_primes,ssl_sup,ssl_trace,
          ssl_upgrade_server_session_cache_sup,tls_bloom_filter,
          tls_client_connection_1_3,tls_client_ticket_store,tls_connection,
          tls_connection_sup,tls_dist_server_sup,tls_dist_sup,
          tls_dtls_connection,tls_dyn_connection_sup,tls_gen_connection,
          tls_gen_connection_1_3,tls_handshake,tls_handshake_1_3,tls_record,
          tls_record_1_3,tls_sender,tls_server_connection_1_3,
          tls_server_session_ticket,tls_server_session_ticket_sup,
          tls_server_sup,tls_socket,tls_sup,tls_v1]},
     {path,["$ROOT/lib/syntax_tools-3.1/ebin"]},
     {primLoad,
         [epp_dodger,erl_comment_scan,erl_prettypr,erl_recomment,erl_syntax,
          erl_syntax_lib,merl,merl_transform,prettypr]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/thoas-1.0.0/ebin"]},
     {primLoad,[thoas,thoas_decode,thoas_encode]},
     {path,["$ROOT/lib/tools-3.6/ebin"]},
     {primLoad,
         [cover,cprof,eprof,fprof,lcnt,make,tags,xref,xref_base,xref_compiler,
          xref_parser,xref_reader,xref_scanner,xref_utils]},
     {path,["$ROOT/lib/xmerl-1.3.34/ebin"]},
     {primLoad,
         [xmerl,xmerl_b64Bin,xmerl_b64Bin_scan,xmerl_eventp,xmerl_html,
          xmerl_lib,xmerl_otpsgml,xmerl_regexp,xmerl_sax_old_dom,
          xmerl_sax_parser,xmerl_sax_parser_latin1,xmerl_sax_parser_list,
          xmerl_sax_parser_utf16be,xmerl_sax_parser_utf16le,
          xmerl_sax_parser_utf8,xmerl_sax_simple_dom,xmerl_scan,xmerl_sgml,
          xmerl_simple,xmerl_text,xmerl_ucs,xmerl_uri,xmerl_validate,
          xmerl_xlate,xmerl_xml,xmerl_xpath,xmerl_xpath_lib,xmerl_xpath_parse,
          xmerl_xpath_pred,xmerl_xpath_scan,xmerl_xs,xmerl_xsd,
          xmerl_xsd_type]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/rabbit_common-3.12.14/ebin"]},
     {primLoad,
         [app_utils,code_version,credit_flow,delegate,delegate_sup,
          file_handle_cache,file_handle_cache_stats,gen_server2,
          mirrored_supervisor_locks,mnesia_sync,pmon,priority_queue,
          rabbit_amqp_connection,rabbit_amqqueue_common,
          rabbit_auth_backend_dummy,rabbit_auth_mechanism,
          rabbit_authn_backend,rabbit_authz_backend,rabbit_basic_common,
          rabbit_binary_generator,rabbit_binary_parser,rabbit_cert_info,
          rabbit_channel_common,rabbit_command_assembler,rabbit_control_misc,
          rabbit_core_metrics,rabbit_data_coercion,rabbit_date_time,
          rabbit_env,rabbit_error_logger_handler,rabbit_event,rabbit_framing,
          rabbit_framing_amqp_0_8,rabbit_framing_amqp_0_9_1,rabbit_heartbeat,
          rabbit_http_util,rabbit_json,rabbit_log,rabbit_misc,
          rabbit_msg_store_index,rabbit_net,rabbit_nodes_common,
          rabbit_numerical,rabbit_password,rabbit_password_hashing,
          rabbit_password_hashing_md5,rabbit_password_hashing_sha256,
          rabbit_password_hashing_sha512,rabbit_pbe,
          rabbit_peer_discovery_backend,rabbit_policy_validator,
          rabbit_queue_collector,rabbit_registry,rabbit_registry_class,
          rabbit_resource_monitor_misc,rabbit_runtime,
          rabbit_runtime_parameter,rabbit_semver,rabbit_semver_parser,
          rabbit_ssl_options,rabbit_types,rabbit_writer,supervisor2,
          vm_memory_monitor,worker_pool,worker_pool_sup,worker_pool_worker]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/amqp_client-3.12.14/ebin"]},
     {primLoad,
         [amqp_auth_mechanisms,amqp_channel,amqp_channel_sup,
          amqp_channel_sup_sup,amqp_channels_manager,amqp_client,
          amqp_connection,amqp_connection_sup,amqp_connection_type_sup,
          amqp_direct_connection,amqp_direct_consumer,amqp_gen_connection,
          amqp_gen_consumer,amqp_main_reader,amqp_network_connection,
          amqp_rpc_client,amqp_rpc_server,amqp_selective_consumer,amqp_ssl,
          amqp_sup,amqp_uri,amqp_util,rabbit_routing_util,uri_parser]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/logger-1.16.0/ebin"]},
     {primLoad,
         ['Elixir.Logger','Elixir.Logger.App','Elixir.Logger.Backends.Config',
          'Elixir.Logger.Backends.Console','Elixir.Logger.Backends.Handler',
          'Elixir.Logger.Backends.Internal',
          'Elixir.Logger.Backends.Supervisor',
          'Elixir.Logger.Backends.Watcher','Elixir.Logger.Formatter',
          'Elixir.Logger.Translator','Elixir.Logger.Utils']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/amqp-3.3.0/ebin"]},
     {primLoad,
         ['Elixir.AMQP','Elixir.AMQP.Application',
          'Elixir.AMQP.Application.Channel',
          'Elixir.AMQP.Application.Connection','Elixir.AMQP.Basic',
          'Elixir.AMQP.BasicError','Elixir.AMQP.Channel',
          'Elixir.AMQP.Confirm','Elixir.AMQP.Connection',
          'Elixir.AMQP.ConsumerHelper','Elixir.AMQP.Core',
          'Elixir.AMQP.DirectConsumer','Elixir.AMQP.Exchange',
          'Elixir.AMQP.Queue','Elixir.AMQP.SelectiveConsumer',
          'Elixir.AMQP.Utils']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/hpax-1.0.0/ebin"]},
     {primLoad,
         ['Elixir.HPAX','Elixir.HPAX.Huffman','Elixir.HPAX.Table',
          'Elixir.HPAX.Types']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/eex-1.16.0/ebin"]},
     {primLoad,
         ['Elixir.EEx','Elixir.EEx.Compiler','Elixir.EEx.Engine',
          'Elixir.EEx.SmartEngine','Elixir.EEx.SyntaxError']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/mime-2.0.6/ebin"]},
     {primLoad,['Elixir.MIME']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/plug_crypto-2.1.0/ebin"]},
     {primLoad,
         ['Elixir.Plug.Crypto','Elixir.Plug.Crypto.Application',
          'Elixir.Plug.Crypto.KeyGenerator',
          'Elixir.Plug.Crypto.MessageEncryptor',
          'Elixir.Plug.Crypto.MessageVerifier']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/telemetry-1.3.0/ebin"]},
     {primLoad,
         [telemetry,telemetry_app,telemetry_handler_table,telemetry_sup,
          telemetry_test]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/plug-1.16.1/ebin"]},
     {primLoad,
         ['Elixir.Inspect.Plug.Conn','Elixir.Plug',
          'Elixir.Plug.Adapters.Cowboy','Elixir.Plug.Adapters.Test.Conn',
          'Elixir.Plug.Application','Elixir.Plug.BadRequestError',
          'Elixir.Plug.BasicAuth','Elixir.Plug.Builder',
          'Elixir.Plug.CSRFProtection',
          'Elixir.Plug.CSRFProtection.InvalidCSRFTokenError',
          'Elixir.Plug.CSRFProtection.InvalidCrossOriginRequestError',
          'Elixir.Plug.Conn','Elixir.Plug.Conn.Adapter',
          'Elixir.Plug.Conn.AlreadySentError',
          'Elixir.Plug.Conn.CookieOverflowError','Elixir.Plug.Conn.Cookies',
          'Elixir.Plug.Conn.InvalidHeaderError',
          'Elixir.Plug.Conn.InvalidQueryError',
          'Elixir.Plug.Conn.NotSentError','Elixir.Plug.Conn.Query',
          'Elixir.Plug.Conn.Status','Elixir.Plug.Conn.Unfetched',
          'Elixir.Plug.Conn.Utils','Elixir.Plug.Conn.WrapperError',
          'Elixir.Plug.Debugger','Elixir.Plug.ErrorHandler',
          'Elixir.Plug.Exception','Elixir.Plug.Exception.Any',
          'Elixir.Plug.HTML','Elixir.Plug.Head','Elixir.Plug.Logger',
          'Elixir.Plug.MIME','Elixir.Plug.MethodOverride',
          'Elixir.Plug.Parsers','Elixir.Plug.Parsers.BadEncodingError',
          'Elixir.Plug.Parsers.JSON','Elixir.Plug.Parsers.MULTIPART',
          'Elixir.Plug.Parsers.ParseError',
          'Elixir.Plug.Parsers.RequestTooLargeError',
          'Elixir.Plug.Parsers.URLENCODED',
          'Elixir.Plug.Parsers.UnsupportedMediaTypeError',
          'Elixir.Plug.RequestId','Elixir.Plug.RewriteOn',
          'Elixir.Plug.Router','Elixir.Plug.Router.InvalidSpecError',
          'Elixir.Plug.Router.MalformedURIError','Elixir.Plug.Router.Utils',
          'Elixir.Plug.SSL','Elixir.Plug.Session',
          'Elixir.Plug.Session.COOKIE','Elixir.Plug.Session.ETS',
          'Elixir.Plug.Session.Store','Elixir.Plug.Static',
          'Elixir.Plug.Static.InvalidPathError','Elixir.Plug.Telemetry',
          'Elixir.Plug.Test','Elixir.Plug.TimeoutError','Elixir.Plug.Upload',
          'Elixir.Plug.UploadError',plug_multipart]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/thousand_island-1.3.5/ebin"]},
     {primLoad,
         ['Elixir.ThousandIsland','Elixir.ThousandIsland.Acceptor',
          'Elixir.ThousandIsland.AcceptorPoolSupervisor',
          'Elixir.ThousandIsland.AcceptorSupervisor',
          'Elixir.ThousandIsland.Connection','Elixir.ThousandIsland.Handler',
          'Elixir.ThousandIsland.Listener','Elixir.ThousandIsland.Logger',
          'Elixir.ThousandIsland.Server','Elixir.ThousandIsland.ServerConfig',
          'Elixir.ThousandIsland.ShutdownListener',
          'Elixir.ThousandIsland.Socket','Elixir.ThousandIsland.Telemetry',
          'Elixir.ThousandIsland.Transport',
          'Elixir.ThousandIsland.Transports.SSL',
          'Elixir.ThousandIsland.Transports.TCP']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/websock-0.5.3/ebin"]},
     {primLoad,['Elixir.WebSock']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/bandit-1.5.7/ebin"]},
     {primLoad,
         ['Elixir.Bandit','Elixir.Bandit.Adapter','Elixir.Bandit.Application',
          'Elixir.Bandit.Clock','Elixir.Bandit.Compression',
          'Elixir.Bandit.DelegatingHandler','Elixir.Bandit.HTTP1.Handler',
          'Elixir.Bandit.HTTP1.Socket','Elixir.Bandit.HTTP2.Connection',
          'Elixir.Bandit.HTTP2.Errors',
          'Elixir.Bandit.HTTP2.Errors.ConnectionError',
          'Elixir.Bandit.HTTP2.Errors.StreamError',
          'Elixir.Bandit.HTTP2.FlowControl','Elixir.Bandit.HTTP2.Frame',
          'Elixir.Bandit.HTTP2.Frame.Continuation',
          'Elixir.Bandit.HTTP2.Frame.Data','Elixir.Bandit.HTTP2.Frame.Flags',
          'Elixir.Bandit.HTTP2.Frame.Goaway',
          'Elixir.Bandit.HTTP2.Frame.Headers',
          'Elixir.Bandit.HTTP2.Frame.Ping',
          'Elixir.Bandit.HTTP2.Frame.Priority',
          'Elixir.Bandit.HTTP2.Frame.PushPromise',
          'Elixir.Bandit.HTTP2.Frame.RstStream',
          'Elixir.Bandit.HTTP2.Frame.Serializable',
          'Elixir.Bandit.HTTP2.Frame.Serializable.Bandit.HTTP2.Frame.Continuation',
          'Elixir.Bandit.HTTP2.Frame.Serializable.Bandit.HTTP2.Frame.Data',
          'Elixir.Bandit.HTTP2.Frame.Serializable.Bandit.HTTP2.Frame.Goaway',
          'Elixir.Bandit.HTTP2.Frame.Serializable.Bandit.HTTP2.Frame.Headers',
          'Elixir.Bandit.HTTP2.Frame.Serializable.Bandit.HTTP2.Frame.Ping',
          'Elixir.Bandit.HTTP2.Frame.Serializable.Bandit.HTTP2.Frame.Priority',
          'Elixir.Bandit.HTTP2.Frame.Serializable.Bandit.HTTP2.Frame.RstStream',
          'Elixir.Bandit.HTTP2.Frame.Serializable.Bandit.HTTP2.Frame.Settings',
          'Elixir.Bandit.HTTP2.Frame.Serializable.Bandit.HTTP2.Frame.WindowUpdate',
          'Elixir.Bandit.HTTP2.Frame.Settings',
          'Elixir.Bandit.HTTP2.Frame.Unknown',
          'Elixir.Bandit.HTTP2.Frame.WindowUpdate',
          'Elixir.Bandit.HTTP2.Handler','Elixir.Bandit.HTTP2.Settings',
          'Elixir.Bandit.HTTP2.Stream','Elixir.Bandit.HTTP2.StreamCollection',
          'Elixir.Bandit.HTTP2.StreamProcess','Elixir.Bandit.HTTPError',
          'Elixir.Bandit.HTTPTransport',
          'Elixir.Bandit.HTTPTransport.Bandit.HTTP1.Socket',
          'Elixir.Bandit.HTTPTransport.Bandit.HTTP2.Stream',
          'Elixir.Bandit.Headers','Elixir.Bandit.InitialHandler',
          'Elixir.Bandit.Logger','Elixir.Bandit.PhoenixAdapter',
          'Elixir.Bandit.Pipeline','Elixir.Bandit.Telemetry',
          'Elixir.Bandit.TransportInfo','Elixir.Bandit.WebSocket.Connection',
          'Elixir.Bandit.WebSocket.Frame',
          'Elixir.Bandit.WebSocket.Frame.Binary',
          'Elixir.Bandit.WebSocket.Frame.ConnectionClose',
          'Elixir.Bandit.WebSocket.Frame.Continuation',
          'Elixir.Bandit.WebSocket.Frame.Ping',
          'Elixir.Bandit.WebSocket.Frame.Pong',
          'Elixir.Bandit.WebSocket.Frame.Serializable',
          'Elixir.Bandit.WebSocket.Frame.Serializable.Bandit.WebSocket.Frame.Binary',
          'Elixir.Bandit.WebSocket.Frame.Serializable.Bandit.WebSocket.Frame.ConnectionClose',
          'Elixir.Bandit.WebSocket.Frame.Serializable.Bandit.WebSocket.Frame.Continuation',
          'Elixir.Bandit.WebSocket.Frame.Serializable.Bandit.WebSocket.Frame.Ping',
          'Elixir.Bandit.WebSocket.Frame.Serializable.Bandit.WebSocket.Frame.Pong',
          'Elixir.Bandit.WebSocket.Frame.Serializable.Bandit.WebSocket.Frame.Text',
          'Elixir.Bandit.WebSocket.Frame.Text',
          'Elixir.Bandit.WebSocket.Handler',
          'Elixir.Bandit.WebSocket.Handshake',
          'Elixir.Bandit.WebSocket.PerMessageDeflate',
          'Elixir.Bandit.WebSocket.Socket',
          'Elixir.Bandit.WebSocket.Socket.ThousandIsland.Socket',
          'Elixir.Bandit.WebSocket.UpgradeValidation']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/jason-1.4.4/ebin"]},
     {primLoad,
         ['Elixir.Enumerable.Jason.OrderedObject','Elixir.Jason',
          'Elixir.Jason.Codegen','Elixir.Jason.DecodeError',
          'Elixir.Jason.Decoder','Elixir.Jason.Decoder.Unescape',
          'Elixir.Jason.Encode','Elixir.Jason.EncodeError',
          'Elixir.Jason.Encoder','Elixir.Jason.Encoder.Any',
          'Elixir.Jason.Encoder.Atom','Elixir.Jason.Encoder.BitString',
          'Elixir.Jason.Encoder.Date','Elixir.Jason.Encoder.DateTime',
          'Elixir.Jason.Encoder.Float','Elixir.Jason.Encoder.Integer',
          'Elixir.Jason.Encoder.Jason.Fragment',
          'Elixir.Jason.Encoder.Jason.OrderedObject',
          'Elixir.Jason.Encoder.List','Elixir.Jason.Encoder.Map',
          'Elixir.Jason.Encoder.NaiveDateTime','Elixir.Jason.Encoder.Time',
          'Elixir.Jason.Formatter','Elixir.Jason.Fragment',
          'Elixir.Jason.Helpers','Elixir.Jason.OrderedObject',
          'Elixir.Jason.Sigil']},
     {path,["$ROOT/lib/mnesia-4.23/ebin"]},
     {primLoad,
         [mnesia,mnesia_app,mnesia_backend_type,mnesia_backup,mnesia_bup,
          mnesia_checkpoint,mnesia_checkpoint_sup,mnesia_controller,
          mnesia_dumper,mnesia_event,mnesia_ext_sup,mnesia_frag,
          mnesia_frag_hash,mnesia_index,mnesia_kernel_sup,mnesia_late_loader,
          mnesia_lib,mnesia_loader,mnesia_locker,mnesia_log,mnesia_monitor,
          mnesia_recover,mnesia_registry,mnesia_rpc,mnesia_schema,
          mnesia_snmp_hook,mnesia_sp,mnesia_subscr,mnesia_sup,mnesia_text,
          mnesia_tm]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/quantile_estimator-0.2.1/ebin"]},
     {primLoad,[quantile,quantile_estimator]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/prometheus-4.11.0/ebin"]},
     {primLoad,
         [prometheus,prometheus_boolean,prometheus_buckets,
          prometheus_collector,prometheus_counter,prometheus_format,
          prometheus_gauge,prometheus_histogram,prometheus_http,
          prometheus_instrumenter,prometheus_metric,prometheus_metric_spec,
          prometheus_misc,prometheus_mnesia,prometheus_mnesia_collector,
          prometheus_model,prometheus_model_helpers,
          prometheus_protobuf_format,prometheus_quantile_summary,
          prometheus_registry,prometheus_summary,prometheus_sup,
          prometheus_test_instrumenter,prometheus_text_format,prometheus_time,
          prometheus_vm_dist_collector,prometheus_vm_memory_collector,
          prometheus_vm_msacc_collector,prometheus_vm_statistics_collector,
          prometheus_vm_system_info_collector]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/prometheus_ex-3.1.0/ebin"]},
     {primLoad,
         ['Elixir.Prometheus','Elixir.Prometheus.Buckets',
          'Elixir.Prometheus.Collector','Elixir.Prometheus.Config',
          'Elixir.Prometheus.Config.KeyNotFoundError',
          'Elixir.Prometheus.Contrib.HTTP','Elixir.Prometheus.Contrib.Mnesia',
          'Elixir.Prometheus.Erlang','Elixir.Prometheus.Error',
          'Elixir.Prometheus.Format.Protobuf','Elixir.Prometheus.Format.Text',
          'Elixir.Prometheus.Injector',
          'Elixir.Prometheus.InvalidBlockArityError',
          'Elixir.Prometheus.InvalidBoundError',
          'Elixir.Prometheus.InvalidBucketsError',
          'Elixir.Prometheus.InvalidLabelNameError',
          'Elixir.Prometheus.InvalidMetricArityError',
          'Elixir.Prometheus.InvalidMetricHelpError',
          'Elixir.Prometheus.InvalidMetricLabelsError',
          'Elixir.Prometheus.InvalidMetricNameError',
          'Elixir.Prometheus.InvalidValueError',
          'Elixir.Prometheus.MFAlreadyExistsError','Elixir.Prometheus.Metric',
          'Elixir.Prometheus.Metric.Boolean',
          'Elixir.Prometheus.Metric.Counter','Elixir.Prometheus.Metric.Gauge',
          'Elixir.Prometheus.Metric.Histogram',
          'Elixir.Prometheus.Metric.Summary',
          'Elixir.Prometheus.MissingMetricSpecKeyError',
          'Elixir.Prometheus.Model','Elixir.Prometheus.NoBucketsError',
          'Elixir.Prometheus.Registry',
          'Elixir.Prometheus.UnknownMetricError']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/chronus-0.1.0/ebin"]},
     {primLoad,
         ['Elixir.Chronus.AMQPService','Elixir.Chronus.Application',
          'Elixir.Chronus.CacheServer','Elixir.Chronus.ListScheduledMessages',
          'Elixir.Chronus.MessageController','Elixir.Chronus.MessageServer',
          'Elixir.Chronus.MyPlug','Elixir.Chronus.ScheduledMessage',
          'Elixir.Chronus.Scheduler','Elixir.Chronus.ServerProcess',
          'Elixir.Jason.Encoder.Chronus.ScheduledMessage']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/iex-1.16.0/ebin"]},
     {primLoad,
         ['Elixir.IEx','Elixir.IEx.App','Elixir.IEx.Autocomplete',
          'Elixir.IEx.Broker','Elixir.IEx.CLI','Elixir.IEx.Config',
          'Elixir.IEx.Evaluator','Elixir.IEx.Helpers','Elixir.IEx.History',
          'Elixir.IEx.Info','Elixir.IEx.Info.Any','Elixir.IEx.Info.Atom',
          'Elixir.IEx.Info.BitString','Elixir.IEx.Info.Date',
          'Elixir.IEx.Info.DateTime','Elixir.IEx.Info.Float',
          'Elixir.IEx.Info.Function','Elixir.IEx.Info.Integer',
          'Elixir.IEx.Info.List','Elixir.IEx.Info.Map',
          'Elixir.IEx.Info.NaiveDateTime','Elixir.IEx.Info.PID',
          'Elixir.IEx.Info.Port','Elixir.IEx.Info.Range',
          'Elixir.IEx.Info.Reference','Elixir.IEx.Info.Regex',
          'Elixir.IEx.Info.Time','Elixir.IEx.Info.Tuple',
          'Elixir.IEx.Introspection','Elixir.IEx.Pry','Elixir.IEx.Server']},
     {progress,modules_loaded},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$ROOT/lib/kernel-9.2.3/ebin","$ROOT/lib/stdlib-5.2.2/ebin",
          "$ROOT/lib/compiler-8.4.3/ebin","$RELEASE_LIB/elixir-1.16.0/ebin",
          "$ROOT/lib/sasl-4.2.1/ebin","$ROOT/lib/crypto-5.4.2/ebin",
          "$RELEASE_LIB/credentials_obfuscation-3.4.0/ebin",
          "$ROOT/lib/asn1-5.2.2/ebin","$ROOT/lib/public_key-1.15.1/ebin",
          "$RELEASE_LIB/recon-2.5.3/ebin","$ROOT/lib/ssl-11.1.3/ebin",
          "$ROOT/lib/syntax_tools-3.1/ebin","$RELEASE_LIB/thoas-1.0.0/ebin",
          "$ROOT/lib/tools-3.6/ebin","$ROOT/lib/xmerl-1.3.34/ebin",
          "$RELEASE_LIB/rabbit_common-3.12.14/ebin",
          "$RELEASE_LIB/amqp_client-3.12.14/ebin",
          "$RELEASE_LIB/logger-1.16.0/ebin","$RELEASE_LIB/amqp-3.3.0/ebin",
          "$RELEASE_LIB/hpax-1.0.0/ebin","$RELEASE_LIB/eex-1.16.0/ebin",
          "$RELEASE_LIB/mime-2.0.6/ebin",
          "$RELEASE_LIB/plug_crypto-2.1.0/ebin",
          "$RELEASE_LIB/telemetry-1.3.0/ebin","$RELEASE_LIB/plug-1.16.1/ebin",
          "$RELEASE_LIB/thousand_island-1.3.5/ebin",
          "$RELEASE_LIB/websock-0.5.3/ebin","$RELEASE_LIB/bandit-1.5.7/ebin",
          "$RELEASE_LIB/jason-1.4.4/ebin","$ROOT/lib/mnesia-4.23/ebin",
          "$RELEASE_LIB/quantile_estimator-0.2.1/ebin",
          "$RELEASE_LIB/prometheus-4.11.0/ebin",
          "$RELEASE_LIB/prometheus_ex-3.1.0/ebin",
          "$RELEASE_LIB/chronus-0.1.0/ebin","$RELEASE_LIB/iex-1.16.0/ebin"]},
     {kernelProcess,heart,{heart,start,[]}},
     {kernelProcess,logger,{logger_server,start_link,[]}},
     {kernelProcess,application_controller,
         {application_controller,start,
             [{application,kernel,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"9.2.3"},
                   {id,[]},
                   {modules,
                       [application,application_controller,application_master,
                        application_starter,auth,code,code_server,dist_util,
                        erl_boot_server,erl_compile_server,erl_distribution,
                        erl_erts_errors,erl_reply,erl_kernel_errors,
                        erl_signal_handler,erpc,error_handler,error_logger,
                        file,file_server,file_io_server,global,global_group,
                        global_search,group,group_history,heart,inet6_tcp,
                        inet6_tcp_dist,inet6_udp,inet6_sctp,inet_config,
                        inet_epmd_dist,inet_epmd_socket,inet_hosts,
                        inet_gethost_native,inet_tcp_dist,kernel,
                        kernel_config,kernel_refc,local_tcp,local_udp,logger,
                        logger_backend,logger_config,logger_disk_log_h,
                        logger_filters,logger_formatter,logger_h_common,
                        logger_handler_watcher,logger_olp,logger_proxy,
                        logger_server,logger_simple_h,logger_std_h,logger_sup,
                        net,net_adm,net_kernel,os,ram_file,rpc,user_drv,
                        user_sup,prim_tty,disk_log,disk_log_1,disk_log_server,
                        disk_log_sup,dist_ac,erl_ddll,erl_epmd,erts_debug,
                        gen_tcp,gen_tcp_socket,gen_udp,gen_udp_socket,
                        gen_sctp,inet,inet_db,inet_dns,inet_parse,inet_res,
                        inet_tcp,inet_udp,inet_sctp,pg,pg2,raw_file_io,
                        raw_file_io_compressed,raw_file_io_deflate,
                        raw_file_io_delayed,raw_file_io_inflate,
                        raw_file_io_list,seq_trace,socket,standard_error,
                        wrap_log_reader]},
                   {registered,
                       [application_controller,erl_reply,auth,boot_server,
                        code_server,disk_log_server,disk_log_sup,
                        erl_prim_loader,error_logger,file_server_2,
                        fixtable_server,global_group,global_name_server,heart,
                        init,kernel_config,kernel_refc,kernel_sup,logger,
                        logger_handler_watcher,logger_sup,net_kernel,net_sup,
                        rex,user,os_server,ddll_server,erl_epmd,inet_db,pg]},
                   {applications,[]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,
                       [{logger_level,notice},
                        {logger_sasl_compatible,false},
                        {net_tickintensity,4},
                        {net_ticktime,60},
                        {prevent_overlapping_partitions,true},
                        {shell_docs_ansi,auto}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{kernel,[]}}]}]}},
     {progress,init_kernel_started},
     {apply,
         {application,load,
             [{application,stdlib,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"5.2.2"},
                   {id,[]},
                   {modules,
                       [argparse,array,base64,beam_lib,binary,c,calendar,dets,
                        dets_server,dets_sup,dets_utils,dets_v9,dict,digraph,
                        digraph_utils,edlin,edlin_key,edlin_context,
                        edlin_expand,edlin_type_suggestion,epp,eval_bits,
                        erl_abstract_code,erl_anno,erl_bits,erl_compile,
                        erl_error,erl_eval,erl_expand_records,erl_features,
                        erl_internal,erl_lint,erl_parse,erl_posix_msg,erl_pp,
                        erl_scan,erl_stdlib_errors,erl_tar,
                        error_logger_file_h,error_logger_tty_h,escript,ets,
                        file_sorter,filelib,filename,gb_trees,gb_sets,gen,
                        gen_event,gen_fsm,gen_server,gen_statem,io,io_lib,
                        io_lib_format,io_lib_fread,io_lib_pretty,lists,
                        log_mf_h,maps,math,ms_transform,orddict,ordsets,
                        otp_internal,peer,pool,proc_lib,proplists,qlc,qlc_pt,
                        queue,rand,random,re,sets,shell,shell_default,
                        shell_docs,slave,sofs,string,supervisor,
                        supervisor_bridge,sys,timer,unicode,unicode_util,
                        uri_string,win32reg,zip]},
                   {registered,
                       [timer_server,rsh_starter,take_over_monitor,
                        pool_master,dets]},
                   {applications,[kernel]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,compiler,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"8.4.3"},
                   {id,[]},
                   {modules,
                       [beam_a,beam_asm,beam_bounds,beam_block,
                        beam_call_types,beam_clean,beam_dict,beam_digraph,
                        beam_disasm,beam_flatten,beam_jump,beam_kernel_to_ssa,
                        beam_listing,beam_opcodes,beam_ssa,beam_ssa_alias,
                        beam_ssa_bc_size,beam_ssa_bool,beam_ssa_bsm,
                        beam_ssa_check,beam_ssa_codegen,beam_ssa_dead,
                        beam_ssa_lint,beam_ssa_opt,beam_ssa_pp,
                        beam_ssa_pre_codegen,beam_ssa_private_append,
                        beam_ssa_recv,beam_ssa_share,beam_ssa_throw,
                        beam_ssa_type,beam_trim,beam_types,beam_utils,
                        beam_validator,beam_z,cerl,cerl_clauses,cerl_inline,
                        cerl_trees,compile,core_scan,core_lint,core_parse,
                        core_pp,core_lib,erl_bifs,rec_env,sys_core_alias,
                        sys_core_bsm,sys_core_fold,sys_core_fold_lists,
                        sys_core_inline,sys_core_prepare,sys_messages,
                        sys_pre_attributes,v3_core,v3_kernel,v3_kernel_pp]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,elixir,
                  [{description,"elixir"},
                   {vsn,"1.16.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Access','Elixir.Agent.Server','Elixir.Agent',
                        'Elixir.Application','Elixir.ArgumentError',
                        'Elixir.ArithmeticError','Elixir.Atom',
                        'Elixir.BadArityError','Elixir.BadBooleanError',
                        'Elixir.BadFunctionError','Elixir.BadMapError',
                        'Elixir.BadStructError','Elixir.Base',
                        'Elixir.Behaviour','Elixir.Bitwise',
                        'Elixir.Calendar.ISO',
                        'Elixir.Calendar.TimeZoneDatabase',
                        'Elixir.Calendar.UTCOnlyTimeZoneDatabase',
                        'Elixir.Calendar','Elixir.CaseClauseError',
                        'Elixir.Code.Formatter','Elixir.Code.Fragment',
                        'Elixir.Code.Identifier','Elixir.Code.LoadError',
                        'Elixir.Code.Normalizer','Elixir.Code.Typespec',
                        'Elixir.Code','Elixir.Collectable.BitString',
                        'Elixir.Collectable.File.Stream',
                        'Elixir.Collectable.HashDict',
                        'Elixir.Collectable.HashSet',
                        'Elixir.Collectable.IO.Stream',
                        'Elixir.Collectable.List','Elixir.Collectable.Map',
                        'Elixir.Collectable.MapSet','Elixir.Collectable',
                        'Elixir.CompileError','Elixir.CondClauseError',
                        'Elixir.Config.Provider','Elixir.Config.Reader',
                        'Elixir.Config','Elixir.Date.Range','Elixir.Date',
                        'Elixir.DateTime','Elixir.Dict',
                        'Elixir.DynamicSupervisor','Elixir.Enum.EmptyError',
                        'Elixir.Enum.OutOfBoundsError','Elixir.Enum',
                        'Elixir.Enumerable.Date.Range',
                        'Elixir.Enumerable.File.Stream',
                        'Elixir.Enumerable.Function',
                        'Elixir.Enumerable.GenEvent.Stream',
                        'Elixir.Enumerable.HashDict',
                        'Elixir.Enumerable.HashSet',
                        'Elixir.Enumerable.IO.Stream',
                        'Elixir.Enumerable.List','Elixir.Enumerable.Map',
                        'Elixir.Enumerable.MapSet','Elixir.Enumerable.Range',
                        'Elixir.Enumerable.Stream','Elixir.Enumerable',
                        'Elixir.ErlangError','Elixir.Exception',
                        'Elixir.File.CopyError','Elixir.File.Error',
                        'Elixir.File.LinkError','Elixir.File.RenameError',
                        'Elixir.File.Stat','Elixir.File.Stream','Elixir.File',
                        'Elixir.Float','Elixir.Function',
                        'Elixir.FunctionClauseError','Elixir.GenEvent.Stream',
                        'Elixir.GenEvent','Elixir.GenServer',
                        'Elixir.HashDict','Elixir.HashSet',
                        'Elixir.IO.ANSI.Docs','Elixir.IO.ANSI.Sequence',
                        'Elixir.IO.ANSI','Elixir.IO.Stream',
                        'Elixir.IO.StreamError','Elixir.IO',
                        'Elixir.Inspect.Algebra','Elixir.Inspect.Any',
                        'Elixir.Inspect.Atom','Elixir.Inspect.BitString',
                        'Elixir.Inspect.Date.Range','Elixir.Inspect.Date',
                        'Elixir.Inspect.DateTime','Elixir.Inspect.Error',
                        'Elixir.Inspect.Float','Elixir.Inspect.Function',
                        'Elixir.Inspect.HashDict','Elixir.Inspect.HashSet',
                        'Elixir.Inspect.Inspect.Error',
                        'Elixir.Inspect.Integer','Elixir.Inspect.List',
                        'Elixir.Inspect.Macro.Env','Elixir.Inspect.Map',
                        'Elixir.Inspect.MapSet',
                        'Elixir.Inspect.NaiveDateTime','Elixir.Inspect.Opts',
                        'Elixir.Inspect.PID','Elixir.Inspect.Port',
                        'Elixir.Inspect.Range','Elixir.Inspect.Reference',
                        'Elixir.Inspect.Regex','Elixir.Inspect.Stream',
                        'Elixir.Inspect.Time','Elixir.Inspect.Tuple',
                        'Elixir.Inspect.URI',
                        'Elixir.Inspect.Version.Requirement',
                        'Elixir.Inspect.Version','Elixir.Inspect',
                        'Elixir.Integer','Elixir.Kernel.CLI',
                        'Elixir.Kernel.ErrorHandler',
                        'Elixir.Kernel.LexicalTracker',
                        'Elixir.Kernel.ParallelCompiler',
                        'Elixir.Kernel.ParallelRequire',
                        'Elixir.Kernel.SpecialForms','Elixir.Kernel.Typespec',
                        'Elixir.Kernel.TypespecError','Elixir.Kernel.Utils',
                        'Elixir.Kernel','Elixir.KeyError','Elixir.Keyword',
                        'Elixir.List.Chars.Atom',
                        'Elixir.List.Chars.BitString',
                        'Elixir.List.Chars.Float','Elixir.List.Chars.Integer',
                        'Elixir.List.Chars.List','Elixir.List.Chars',
                        'Elixir.List','Elixir.Macro.Env','Elixir.Macro',
                        'Elixir.Map','Elixir.MapSet','Elixir.MatchError',
                        'Elixir.MismatchedDelimiterError',
                        'Elixir.Module.LocalsTracker',
                        'Elixir.Module.ParallelChecker',
                        'Elixir.Module.Types.Behaviour',
                        'Elixir.Module.Types.Error',
                        'Elixir.Module.Types.Expr',
                        'Elixir.Module.Types.Helpers',
                        'Elixir.Module.Types.Of',
                        'Elixir.Module.Types.Pattern',
                        'Elixir.Module.Types.Unify','Elixir.Module.Types',
                        'Elixir.Module','Elixir.NaiveDateTime','Elixir.Node',
                        'Elixir.OptionParser.ParseError',
                        'Elixir.OptionParser','Elixir.PartitionSupervisor',
                        'Elixir.Path.Wildcard','Elixir.Path','Elixir.Port',
                        'Elixir.Process','Elixir.Protocol.UndefinedError',
                        'Elixir.Protocol','Elixir.Range',
                        'Elixir.Record.Extractor','Elixir.Record',
                        'Elixir.Regex.CompileError','Elixir.Regex',
                        'Elixir.Registry.Partition',
                        'Elixir.Registry.Supervisor','Elixir.Registry',
                        'Elixir.RuntimeError','Elixir.Set',
                        'Elixir.Stream.Reducers','Elixir.Stream',
                        'Elixir.String.Break','Elixir.String.Chars.Atom',
                        'Elixir.String.Chars.BitString',
                        'Elixir.String.Chars.Date',
                        'Elixir.String.Chars.DateTime',
                        'Elixir.String.Chars.Float',
                        'Elixir.String.Chars.Integer',
                        'Elixir.String.Chars.List',
                        'Elixir.String.Chars.NaiveDateTime',
                        'Elixir.String.Chars.Time','Elixir.String.Chars.URI',
                        'Elixir.String.Chars.Version.Requirement',
                        'Elixir.String.Chars.Version','Elixir.String.Chars',
                        'Elixir.String.Tokenizer.ScriptSet',
                        'Elixir.String.Tokenizer.Security',
                        'Elixir.String.Tokenizer','Elixir.String.Unicode',
                        'Elixir.String','Elixir.StringIO',
                        'Elixir.Supervisor.Default','Elixir.Supervisor.Spec',
                        'Elixir.Supervisor','Elixir.SyntaxError',
                        'Elixir.System.EnvError',
                        'Elixir.System.SignalHandler','Elixir.System',
                        'Elixir.SystemLimitError','Elixir.Task.Supervised',
                        'Elixir.Task.Supervisor','Elixir.Task','Elixir.Time',
                        'Elixir.TokenMissingError','Elixir.TryClauseError',
                        'Elixir.Tuple','Elixir.URI.Error','Elixir.URI',
                        'Elixir.UndefinedFunctionError',
                        'Elixir.UnicodeConversionError',
                        'Elixir.Version.InvalidRequirementError',
                        'Elixir.Version.InvalidVersionError',
                        'Elixir.Version.Parser','Elixir.Version.Requirement',
                        'Elixir.Version','Elixir.WithClauseError',elixir,
                        elixir_aliases,elixir_bitstring,elixir_bootstrap,
                        elixir_clauses,elixir_code_server,elixir_compiler,
                        elixir_config,elixir_def,elixir_dispatch,elixir_env,
                        elixir_erl,elixir_erl_clauses,elixir_erl_compiler,
                        elixir_erl_for,elixir_erl_pass,elixir_erl_try,
                        elixir_erl_var,elixir_errors,elixir_expand,elixir_fn,
                        elixir_import,elixir_interpolation,elixir_lexical,
                        elixir_locals,elixir_map,elixir_module,
                        elixir_overridable,elixir_parser,elixir_quote,
                        elixir_rewrite,elixir_sup,elixir_tokenizer,
                        elixir_utils,iex]},
                   {registered,[elixir_sup,elixir_config,elixir_code_server]},
                   {applications,[kernel,stdlib,compiler]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,
                       [{ansi_syntax_colors,
                            [{atom,cyan},
                             {binary,default_color},
                             {boolean,magenta},
                             {charlist,yellow},
                             {list,default_color},
                             {map,default_color},
                             {nil,magenta},
                             {number,yellow},
                             {string,green},
                             {tuple,default_color},
                             {variable,light_cyan},
                             {call,default_color},
                             {operator,default_color}]},
                        {check_endianness,true},
                        {dbg_callback,{'Elixir.Macro',dbg,[]}},
                        {time_zone_database,
                            'Elixir.Calendar.UTCOnlyTimeZoneDatabase'}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{elixir,[]}}]}]}},
     {apply,
         {application,load,
             [{application,sasl,
                  [{description,"SASL  CXC 138 11"},
                   {vsn,"4.2.1"},
                   {id,[]},
                   {modules,
                       [sasl,alarm_handler,format_lib_supp,misc_supp,rb,
                        rb_format_supp,release_handler,release_handler_1,
                        erlsrv,sasl_report,sasl_report_tty_h,
                        sasl_report_file_h,systools,systools_make,systools_rc,
                        systools_relup,systools_lib]},
                   {registered,[sasl_sup,alarm_handler,release_handler]},
                   {applications,[kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{sasl,[]}}]}]}},
     {apply,
         {application,load,
             [{application,crypto,
                  [{description,"CRYPTO"},
                   {vsn,"5.4.2"},
                   {id,[]},
                   {modules,[crypto,crypto_ec_curves]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[{fips_mode,false},{rand_cache_size,896}]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,credentials_obfuscation,
                  [{description,
                       "Helper library that obfuscates sensitive values in process state"},
                   {vsn,"3.4.0"},
                   {id,[]},
                   {modules,
                       [credentials_obfuscation,credentials_obfuscation_app,
                        credentials_obfuscation_pbe,
                        credentials_obfuscation_sup,
                        credentials_obfuscation_svc]},
                   {registered,[]},
                   {applications,[kernel,stdlib,crypto]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[{enabled,true}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{credentials_obfuscation_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,asn1,
                  [{description,"The Erlang ASN1 compiler version 5.2.2"},
                   {vsn,"5.2.2"},
                   {id,[]},
                   {modules,[asn1rt_nif]},
                   {registered,[asn1_ns,asn1db]},
                   {applications,[kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,public_key,
                  [{description,"Public key infrastructure"},
                   {vsn,"1.15.1"},
                   {id,[]},
                   {modules,
                       [public_key,pubkey_pem,pubkey_pbe,pubkey_ssh,
                        pubkey_cert,pubkey_policy_tree,pubkey_cert_records,
                        pubkey_crl,pubkey_ocsp,pubkey_os_cacerts,
                        'OTP-PUB-KEY','PKCS-FRAME']},
                   {registered,[]},
                   {applications,[kernel,stdlib,asn1,crypto]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,recon,
                  [{description,"Diagnostic tools for production use"},
                   {vsn,"2.5.3"},
                   {id,[]},
                   {modules,
                       [recon,recon_alloc,recon_lib,recon_map,recon_rec,
                        recon_trace]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,ssl,
                  [{description,"Erlang/OTP SSL application"},
                   {vsn,"11.1.3"},
                   {id,[]},
                   {modules,
                       [tls_connection,tls_client_connection_1_3,
                        tls_server_connection_1_3,tls_gen_connection_1_3,
                        tls_handshake,tls_handshake_1_3,tls_record,
                        tls_record_1_3,tls_socket,tls_v1,tls_connection_sup,
                        tls_gen_connection,tls_sender,tls_server_sup,
                        tls_server_session_ticket_sup,
                        tls_server_session_ticket,tls_sup,
                        tls_dyn_connection_sup,ssl_dh_groups,dtls_connection,
                        dtls_handshake,dtls_record,dtls_socket,dtls_v1,
                        dtls_connection_sup,dtls_gen_connection,
                        dtls_packet_demux,dtls_listener_sup,dtls_sup,
                        dtls_server_sup,dtls_server_session_cache_sup,ssl,
                        ssl_session_cache_api,tls_dtls_connection,ssl_config,
                        ssl_gen_statem,ssl_handshake,ssl_record,ssl_cipher,
                        ssl_cipher_format,ssl_srp_primes,ssl_alert,
                        ssl_listen_tracker_sup,tls_bloom_filter,
                        tls_client_ticket_store,inet_tls_dist,inet6_tls_dist,
                        ssl_dist_sup,ssl_dist_connection_sup,
                        ssl_dist_admin_sup,tls_dist_sup,tls_dist_server_sup,
                        ssl_session,ssl_client_session_cache_db,
                        ssl_server_session_cache,ssl_server_session_cache_db,
                        ssl_server_session_cache_sup,
                        ssl_upgrade_server_session_cache_sup,ssl_manager,
                        ssl_pem_cache,ssl_pkix_db,ssl_certificate,ssl_crl,
                        ssl_crl_cache,ssl_crl_cache_api,ssl_crl_hash_dir,
                        ssl_logger,ssl_trace,ssl_app,ssl_sup,ssl_admin_sup,
                        ssl_connection_sup]},
                   {registered,[ssl_sup,ssl_manager]},
                   {applications,[kernel,stdlib,crypto,public_key]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{ssl_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,syntax_tools,
                  [{description,"Syntax tools"},
                   {vsn,"3.1"},
                   {id,[]},
                   {modules,
                       [epp_dodger,erl_comment_scan,erl_prettypr,
                        erl_recomment,erl_syntax,erl_syntax_lib,merl,
                        merl_transform,prettypr]},
                   {registered,[]},
                   {applications,[stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,thoas,
                  [{description,
                       "A blazing fast JSON parser and generator in pure Erlang."},
                   {vsn,"1.0.0"},
                   {id,[]},
                   {modules,[thoas,thoas_decode,thoas_encode]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,tools,
                  [{description,"DEVTOOLS  CXC 138 16"},
                   {vsn,"3.6"},
                   {id,[]},
                   {modules,
                       [cover,cprof,eprof,fprof,lcnt,make,tags,xref,xref_base,
                        xref_compiler,xref_parser,xref_reader,xref_scanner,
                        xref_utils]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,
                       [{file_util_search_methods,
                            [{[],[]},{"ebin","esrc"},{"ebin","src"}]}]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,xmerl,
                  [{description,"XML parser"},
                   {vsn,"1.3.34"},
                   {id,[]},
                   {modules,
                       [xmerl,xmerl_b64Bin,xmerl_b64Bin_scan,xmerl_eventp,
                        xmerl_html,xmerl_lib,xmerl_otpsgml,xmerl_regexp,
                        xmerl_sax_parser,xmerl_sax_parser_list,
                        xmerl_sax_parser_latin1,xmerl_sax_parser_utf8,
                        xmerl_sax_parser_utf16be,xmerl_sax_parser_utf16le,
                        xmerl_sax_simple_dom,xmerl_sax_old_dom,xmerl_scan,
                        xmerl_sgml,xmerl_simple,xmerl_text,xmerl_ucs,
                        xmerl_uri,xmerl_validate,xmerl_xlate,xmerl_xml,
                        xmerl_xpath,xmerl_xpath_lib,xmerl_xpath_parse,
                        xmerl_xpath_pred,xmerl_xpath_scan,xmerl_xs,xmerl_xsd,
                        xmerl_xsd_type]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,rabbit_common,
                  [{description,
                       "Modules shared by rabbitmq-server and rabbitmq-erlang-client"},
                   {vsn,"3.12.14"},
                   {id,[]},
                   {modules,
                       [app_utils,code_version,credit_flow,delegate,
                        delegate_sup,file_handle_cache,
                        file_handle_cache_stats,gen_server2,
                        mirrored_supervisor_locks,mnesia_sync,pmon,
                        priority_queue,rabbit_amqp_connection,
                        rabbit_amqqueue_common,rabbit_auth_backend_dummy,
                        rabbit_auth_mechanism,rabbit_authn_backend,
                        rabbit_authz_backend,rabbit_basic_common,
                        rabbit_binary_generator,rabbit_binary_parser,
                        rabbit_cert_info,rabbit_channel_common,
                        rabbit_command_assembler,rabbit_control_misc,
                        rabbit_core_metrics,rabbit_data_coercion,
                        rabbit_date_time,rabbit_env,
                        rabbit_error_logger_handler,rabbit_event,
                        rabbit_framing,rabbit_framing_amqp_0_8,
                        rabbit_framing_amqp_0_9_1,rabbit_heartbeat,
                        rabbit_http_util,rabbit_json,rabbit_log,rabbit_misc,
                        rabbit_msg_store_index,rabbit_net,rabbit_nodes_common,
                        rabbit_numerical,rabbit_password,
                        rabbit_password_hashing,rabbit_password_hashing_md5,
                        rabbit_password_hashing_sha256,
                        rabbit_password_hashing_sha512,rabbit_pbe,
                        rabbit_peer_discovery_backend,rabbit_policy_validator,
                        rabbit_queue_collector,rabbit_registry,
                        rabbit_registry_class,rabbit_resource_monitor_misc,
                        rabbit_runtime,rabbit_runtime_parameter,rabbit_semver,
                        rabbit_semver_parser,rabbit_ssl_options,rabbit_types,
                        rabbit_writer,supervisor2,vm_memory_monitor,
                        worker_pool,worker_pool_sup,worker_pool_worker]},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,sasl,compiler,credentials_obfuscation,
                        crypto,public_key,recon,ssl,syntax_tools,thoas,tools,
                        xmerl]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,amqp_client,
                  [{description,"RabbitMQ AMQP Client"},
                   {vsn,"3.12.14"},
                   {id,[]},
                   {modules,
                       [amqp_auth_mechanisms,amqp_channel,amqp_channel_sup,
                        amqp_channel_sup_sup,amqp_channels_manager,
                        amqp_client,amqp_connection,amqp_connection_sup,
                        amqp_connection_type_sup,amqp_direct_connection,
                        amqp_direct_consumer,amqp_gen_connection,
                        amqp_gen_consumer,amqp_main_reader,
                        amqp_network_connection,amqp_rpc_client,
                        amqp_rpc_server,amqp_selective_consumer,amqp_ssl,
                        amqp_sup,amqp_uri,amqp_util,rabbit_routing_util,
                        uri_parser]},
                   {registered,[amqp_client_sup,amqp_sup]},
                   {applications,
                       [kernel,stdlib,credentials_obfuscation,public_key,
                        rabbit_common,ssl,xmerl]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,
                       [{prefer_ipv6,false},
                        {ssl_options,[]},
                        {writer_gc_threshold,1000000000}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{amqp_client,[]}}]}]}},
     {apply,
         {application,load,
             [{application,logger,
                  [{description,"logger"},
                   {vsn,"1.16.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Logger','Elixir.Logger.App',
                        'Elixir.Logger.Backends.Config',
                        'Elixir.Logger.Backends.Console',
                        'Elixir.Logger.Backends.Handler',
                        'Elixir.Logger.Backends.Internal',
                        'Elixir.Logger.Backends.Supervisor',
                        'Elixir.Logger.Backends.Watcher',
                        'Elixir.Logger.Formatter','Elixir.Logger.Translator',
                        'Elixir.Logger.Utils']},
                   {registered,['Elixir.Logger','Elixir.Logger.Supervisor']},
                   {applications,[kernel,stdlib,elixir]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,
                       [{utc_log,false},
                        {truncate,8096},
                        {translators,[{'Elixir.Logger.Translator',translate}]},
                        {handle_otp_reports,true},
                        {handle_sasl_reports,false},
                        {always_evaluate_messages,false},
                        {compile_time_purge_matching,[]},
                        {compile_time_application,nil},
                        {translator_inspect_opts,[]},
                        {start_options,[]},
                        {sync_threshold,20},
                        {discard_threshold,500},
                        {discard_threshold_periodic_check,30000},
                        {metadata,[]}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Logger.App',[]}}]}]}},
     {apply,
         {application,load,
             [{application,amqp,
                  [{description,"amqp"},
                   {vsn,"3.3.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.AMQP','Elixir.AMQP.Application',
                        'Elixir.AMQP.Application.Channel',
                        'Elixir.AMQP.Application.Connection',
                        'Elixir.AMQP.Basic','Elixir.AMQP.BasicError',
                        'Elixir.AMQP.Channel','Elixir.AMQP.Confirm',
                        'Elixir.AMQP.Connection','Elixir.AMQP.ConsumerHelper',
                        'Elixir.AMQP.Core','Elixir.AMQP.DirectConsumer',
                        'Elixir.AMQP.Exchange','Elixir.AMQP.Queue',
                        'Elixir.AMQP.SelectiveConsumer','Elixir.AMQP.Utils']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,amqp_client,logger]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.AMQP.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,hpax,
                  [{description,
                       "Implementation of the HPACK protocol (RFC 7541) for Elixir"},
                   {vsn,"1.0.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.HPAX','Elixir.HPAX.Huffman',
                        'Elixir.HPAX.Table','Elixir.HPAX.Types']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,eex,
                  [{description,"eex"},
                   {vsn,"1.16.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.EEx','Elixir.EEx.Compiler',
                        'Elixir.EEx.Engine','Elixir.EEx.SmartEngine',
                        'Elixir.EEx.SyntaxError']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,mime,
                  [{description,"A MIME type module for Elixir"},
                   {vsn,"2.0.6"},
                   {id,[]},
                   {modules,['Elixir.MIME']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,logger]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,plug_crypto,
                  [{description,"Crypto-related functionality for the web"},
                   {vsn,"2.1.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Plug.Crypto','Elixir.Plug.Crypto.Application',
                        'Elixir.Plug.Crypto.KeyGenerator',
                        'Elixir.Plug.Crypto.MessageEncryptor',
                        'Elixir.Plug.Crypto.MessageVerifier']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,crypto]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Plug.Crypto.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,telemetry,
                  [{description,
                       "Dynamic dispatching library for metrics and instrumentations"},
                   {vsn,"1.3.0"},
                   {id,[]},
                   {modules,
                       [telemetry,telemetry_app,telemetry_handler_table,
                        telemetry_sup,telemetry_test]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{telemetry_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,plug,
                  [{description,"Compose web applications with functions"},
                   {vsn,"1.16.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.Inspect.Plug.Conn','Elixir.Plug',
                        'Elixir.Plug.Adapters.Cowboy',
                        'Elixir.Plug.Adapters.Test.Conn',
                        'Elixir.Plug.Application',
                        'Elixir.Plug.BadRequestError','Elixir.Plug.BasicAuth',
                        'Elixir.Plug.Builder','Elixir.Plug.CSRFProtection',
                        'Elixir.Plug.CSRFProtection.InvalidCSRFTokenError',
                        'Elixir.Plug.CSRFProtection.InvalidCrossOriginRequestError',
                        'Elixir.Plug.Conn','Elixir.Plug.Conn.Adapter',
                        'Elixir.Plug.Conn.AlreadySentError',
                        'Elixir.Plug.Conn.CookieOverflowError',
                        'Elixir.Plug.Conn.Cookies',
                        'Elixir.Plug.Conn.InvalidHeaderError',
                        'Elixir.Plug.Conn.InvalidQueryError',
                        'Elixir.Plug.Conn.NotSentError',
                        'Elixir.Plug.Conn.Query','Elixir.Plug.Conn.Status',
                        'Elixir.Plug.Conn.Unfetched','Elixir.Plug.Conn.Utils',
                        'Elixir.Plug.Conn.WrapperError',
                        'Elixir.Plug.Debugger','Elixir.Plug.ErrorHandler',
                        'Elixir.Plug.Exception','Elixir.Plug.Exception.Any',
                        'Elixir.Plug.HTML','Elixir.Plug.Head',
                        'Elixir.Plug.Logger','Elixir.Plug.MIME',
                        'Elixir.Plug.MethodOverride','Elixir.Plug.Parsers',
                        'Elixir.Plug.Parsers.BadEncodingError',
                        'Elixir.Plug.Parsers.JSON',
                        'Elixir.Plug.Parsers.MULTIPART',
                        'Elixir.Plug.Parsers.ParseError',
                        'Elixir.Plug.Parsers.RequestTooLargeError',
                        'Elixir.Plug.Parsers.URLENCODED',
                        'Elixir.Plug.Parsers.UnsupportedMediaTypeError',
                        'Elixir.Plug.RequestId','Elixir.Plug.RewriteOn',
                        'Elixir.Plug.Router',
                        'Elixir.Plug.Router.InvalidSpecError',
                        'Elixir.Plug.Router.MalformedURIError',
                        'Elixir.Plug.Router.Utils','Elixir.Plug.SSL',
                        'Elixir.Plug.Session','Elixir.Plug.Session.COOKIE',
                        'Elixir.Plug.Session.ETS','Elixir.Plug.Session.Store',
                        'Elixir.Plug.Static',
                        'Elixir.Plug.Static.InvalidPathError',
                        'Elixir.Plug.Telemetry','Elixir.Plug.Test',
                        'Elixir.Plug.TimeoutError','Elixir.Plug.Upload',
                        'Elixir.Plug.UploadError',plug_multipart]},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,eex,logger,mime,plug_crypto,
                        telemetry]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[{validate_header_keys_during_test,true}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Plug.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,thousand_island,
                  [{description,"A simple & modern pure Elixir socket server"},
                   {vsn,"1.3.5"},
                   {id,[]},
                   {modules,
                       ['Elixir.ThousandIsland',
                        'Elixir.ThousandIsland.Acceptor',
                        'Elixir.ThousandIsland.AcceptorPoolSupervisor',
                        'Elixir.ThousandIsland.AcceptorSupervisor',
                        'Elixir.ThousandIsland.Connection',
                        'Elixir.ThousandIsland.Handler',
                        'Elixir.ThousandIsland.Listener',
                        'Elixir.ThousandIsland.Logger',
                        'Elixir.ThousandIsland.Server',
                        'Elixir.ThousandIsland.ServerConfig',
                        'Elixir.ThousandIsland.ShutdownListener',
                        'Elixir.ThousandIsland.Socket',
                        'Elixir.ThousandIsland.Telemetry',
                        'Elixir.ThousandIsland.Transport',
                        'Elixir.ThousandIsland.Transports.SSL',
                        'Elixir.ThousandIsland.Transports.TCP']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,logger,ssl,telemetry]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,websock,
                  [{description,"A specification for WebSocket connections"},
                   {vsn,"0.5.3"},
                   {id,[]},
                   {modules,['Elixir.WebSock']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,bandit,
                  [{description,
                       "A pure-Elixir HTTP server built for Plug & WebSock apps"},
                   {vsn,"1.5.7"},
                   {id,[]},
                   {modules,
                       ['Elixir.Bandit','Elixir.Bandit.Adapter',
                        'Elixir.Bandit.Application','Elixir.Bandit.Clock',
                        'Elixir.Bandit.Compression',
                        'Elixir.Bandit.DelegatingHandler',
                        'Elixir.Bandit.HTTP1.Handler',
                        'Elixir.Bandit.HTTP1.Socket',
                        'Elixir.Bandit.HTTP2.Connection',
                        'Elixir.Bandit.HTTP2.Errors',
                        'Elixir.Bandit.HTTP2.Errors.ConnectionError',
                        'Elixir.Bandit.HTTP2.Errors.StreamError',
                        'Elixir.Bandit.HTTP2.FlowControl',
                        'Elixir.Bandit.HTTP2.Frame',
                        'Elixir.Bandit.HTTP2.Frame.Continuation',
                        'Elixir.Bandit.HTTP2.Frame.Data',
                        'Elixir.Bandit.HTTP2.Frame.Flags',
                        'Elixir.Bandit.HTTP2.Frame.Goaway',
                        'Elixir.Bandit.HTTP2.Frame.Headers',
                        'Elixir.Bandit.HTTP2.Frame.Ping',
                        'Elixir.Bandit.HTTP2.Frame.Priority',
                        'Elixir.Bandit.HTTP2.Frame.PushPromise',
                        'Elixir.Bandit.HTTP2.Frame.RstStream',
                        'Elixir.Bandit.HTTP2.Frame.Serializable',
                        'Elixir.Bandit.HTTP2.Frame.Serializable.Bandit.HTTP2.Frame.Continuation',
                        'Elixir.Bandit.HTTP2.Frame.Serializable.Bandit.HTTP2.Frame.Data',
                        'Elixir.Bandit.HTTP2.Frame.Serializable.Bandit.HTTP2.Frame.Goaway',
                        'Elixir.Bandit.HTTP2.Frame.Serializable.Bandit.HTTP2.Frame.Headers',
                        'Elixir.Bandit.HTTP2.Frame.Serializable.Bandit.HTTP2.Frame.Ping',
                        'Elixir.Bandit.HTTP2.Frame.Serializable.Bandit.HTTP2.Frame.Priority',
                        'Elixir.Bandit.HTTP2.Frame.Serializable.Bandit.HTTP2.Frame.RstStream',
                        'Elixir.Bandit.HTTP2.Frame.Serializable.Bandit.HTTP2.Frame.Settings',
                        'Elixir.Bandit.HTTP2.Frame.Serializable.Bandit.HTTP2.Frame.WindowUpdate',
                        'Elixir.Bandit.HTTP2.Frame.Settings',
                        'Elixir.Bandit.HTTP2.Frame.Unknown',
                        'Elixir.Bandit.HTTP2.Frame.WindowUpdate',
                        'Elixir.Bandit.HTTP2.Handler',
                        'Elixir.Bandit.HTTP2.Settings',
                        'Elixir.Bandit.HTTP2.Stream',
                        'Elixir.Bandit.HTTP2.StreamCollection',
                        'Elixir.Bandit.HTTP2.StreamProcess',
                        'Elixir.Bandit.HTTPError',
                        'Elixir.Bandit.HTTPTransport',
                        'Elixir.Bandit.HTTPTransport.Bandit.HTTP1.Socket',
                        'Elixir.Bandit.HTTPTransport.Bandit.HTTP2.Stream',
                        'Elixir.Bandit.Headers',
                        'Elixir.Bandit.InitialHandler','Elixir.Bandit.Logger',
                        'Elixir.Bandit.PhoenixAdapter',
                        'Elixir.Bandit.Pipeline','Elixir.Bandit.Telemetry',
                        'Elixir.Bandit.TransportInfo',
                        'Elixir.Bandit.WebSocket.Connection',
                        'Elixir.Bandit.WebSocket.Frame',
                        'Elixir.Bandit.WebSocket.Frame.Binary',
                        'Elixir.Bandit.WebSocket.Frame.ConnectionClose',
                        'Elixir.Bandit.WebSocket.Frame.Continuation',
                        'Elixir.Bandit.WebSocket.Frame.Ping',
                        'Elixir.Bandit.WebSocket.Frame.Pong',
                        'Elixir.Bandit.WebSocket.Frame.Serializable',
                        'Elixir.Bandit.WebSocket.Frame.Serializable.Bandit.WebSocket.Frame.Binary',
                        'Elixir.Bandit.WebSocket.Frame.Serializable.Bandit.WebSocket.Frame.ConnectionClose',
                        'Elixir.Bandit.WebSocket.Frame.Serializable.Bandit.WebSocket.Frame.Continuation',
                        'Elixir.Bandit.WebSocket.Frame.Serializable.Bandit.WebSocket.Frame.Ping',
                        'Elixir.Bandit.WebSocket.Frame.Serializable.Bandit.WebSocket.Frame.Pong',
                        'Elixir.Bandit.WebSocket.Frame.Serializable.Bandit.WebSocket.Frame.Text',
                        'Elixir.Bandit.WebSocket.Frame.Text',
                        'Elixir.Bandit.WebSocket.Handler',
                        'Elixir.Bandit.WebSocket.Handshake',
                        'Elixir.Bandit.WebSocket.PerMessageDeflate',
                        'Elixir.Bandit.WebSocket.Socket',
                        'Elixir.Bandit.WebSocket.Socket.ThousandIsland.Socket',
                        'Elixir.Bandit.WebSocket.UpgradeValidation']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,hpax,logger,plug,telemetry,
                        thousand_island,websock]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Bandit.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,jason,
                  [{description,
                       "A blazing fast JSON parser and generator in pure Elixir.\n"},
                   {vsn,"1.4.4"},
                   {id,[]},
                   {modules,
                       ['Elixir.Enumerable.Jason.OrderedObject',
                        'Elixir.Jason','Elixir.Jason.Codegen',
                        'Elixir.Jason.DecodeError','Elixir.Jason.Decoder',
                        'Elixir.Jason.Decoder.Unescape','Elixir.Jason.Encode',
                        'Elixir.Jason.EncodeError','Elixir.Jason.Encoder',
                        'Elixir.Jason.Encoder.Any',
                        'Elixir.Jason.Encoder.Atom',
                        'Elixir.Jason.Encoder.BitString',
                        'Elixir.Jason.Encoder.Date',
                        'Elixir.Jason.Encoder.DateTime',
                        'Elixir.Jason.Encoder.Float',
                        'Elixir.Jason.Encoder.Integer',
                        'Elixir.Jason.Encoder.Jason.Fragment',
                        'Elixir.Jason.Encoder.Jason.OrderedObject',
                        'Elixir.Jason.Encoder.List',
                        'Elixir.Jason.Encoder.Map',
                        'Elixir.Jason.Encoder.NaiveDateTime',
                        'Elixir.Jason.Encoder.Time','Elixir.Jason.Formatter',
                        'Elixir.Jason.Fragment','Elixir.Jason.Helpers',
                        'Elixir.Jason.OrderedObject','Elixir.Jason.Sigil']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,decimal]},
                   {optional_applications,[decimal]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,mnesia,
                  [{description,"MNESIA  CXC 138 12"},
                   {vsn,"4.23"},
                   {id,[]},
                   {modules,
                       [mnesia,mnesia_app,mnesia_backend_type,mnesia_backup,
                        mnesia_bup,mnesia_checkpoint,mnesia_checkpoint_sup,
                        mnesia_controller,mnesia_dumper,mnesia_event,
                        mnesia_ext_sup,mnesia_frag,mnesia_frag_hash,
                        mnesia_index,mnesia_kernel_sup,mnesia_late_loader,
                        mnesia_lib,mnesia_loader,mnesia_locker,mnesia_log,
                        mnesia_monitor,mnesia_recover,mnesia_registry,
                        mnesia_rpc,mnesia_schema,mnesia_snmp_hook,
                        mnesia_subscr,mnesia_sup,mnesia_sp,mnesia_text,
                        mnesia_tm]},
                   {registered,
                       [mnesia_dumper_load_regulator,mnesia_event,
                        mnesia_fallback,mnesia_controller,mnesia_kernel_sup,
                        mnesia_late_loader,mnesia_locker,mnesia_monitor,
                        mnesia_recover,mnesia_rpc,mnesia_substr,mnesia_sup,
                        mnesia_tm]},
                   {applications,[kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{mnesia_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,quantile_estimator,
                  [{description,
                       "This library provides a memory-efficient data structure to store distributions of larges sets of data."},
                   {vsn,"0.2.1"},
                   {id,[]},
                   {modules,[quantile,quantile_estimator]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,prometheus,
                  [{description,
                       "Prometheus monitoring system and time series database client in Erlang.\n"},
                   {vsn,"4.11.0"},
                   {id,[]},
                   {modules,
                       [prometheus,prometheus_boolean,prometheus_buckets,
                        prometheus_collector,prometheus_counter,
                        prometheus_format,prometheus_gauge,
                        prometheus_histogram,prometheus_http,
                        prometheus_instrumenter,prometheus_metric,
                        prometheus_metric_spec,prometheus_misc,
                        prometheus_mnesia,prometheus_mnesia_collector,
                        prometheus_model,prometheus_model_helpers,
                        prometheus_protobuf_format,
                        prometheus_quantile_summary,prometheus_registry,
                        prometheus_summary,prometheus_sup,
                        prometheus_test_instrumenter,prometheus_text_format,
                        prometheus_time,prometheus_vm_dist_collector,
                        prometheus_vm_memory_collector,
                        prometheus_vm_msacc_collector,
                        prometheus_vm_statistics_collector,
                        prometheus_vm_system_info_collector]},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,quantile_estimator]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{prometheus,[]}}]}]}},
     {apply,
         {application,load,
             [{application,prometheus_ex,
                  [{description,
                       "Elixir-friendly Prometheus monitoring system client.\n"},
                   {vsn,"3.1.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Prometheus','Elixir.Prometheus.Buckets',
                        'Elixir.Prometheus.Collector',
                        'Elixir.Prometheus.Config',
                        'Elixir.Prometheus.Config.KeyNotFoundError',
                        'Elixir.Prometheus.Contrib.HTTP',
                        'Elixir.Prometheus.Contrib.Mnesia',
                        'Elixir.Prometheus.Erlang','Elixir.Prometheus.Error',
                        'Elixir.Prometheus.Format.Protobuf',
                        'Elixir.Prometheus.Format.Text',
                        'Elixir.Prometheus.Injector',
                        'Elixir.Prometheus.InvalidBlockArityError',
                        'Elixir.Prometheus.InvalidBoundError',
                        'Elixir.Prometheus.InvalidBucketsError',
                        'Elixir.Prometheus.InvalidLabelNameError',
                        'Elixir.Prometheus.InvalidMetricArityError',
                        'Elixir.Prometheus.InvalidMetricHelpError',
                        'Elixir.Prometheus.InvalidMetricLabelsError',
                        'Elixir.Prometheus.InvalidMetricNameError',
                        'Elixir.Prometheus.InvalidValueError',
                        'Elixir.Prometheus.MFAlreadyExistsError',
                        'Elixir.Prometheus.Metric',
                        'Elixir.Prometheus.Metric.Boolean',
                        'Elixir.Prometheus.Metric.Counter',
                        'Elixir.Prometheus.Metric.Gauge',
                        'Elixir.Prometheus.Metric.Histogram',
                        'Elixir.Prometheus.Metric.Summary',
                        'Elixir.Prometheus.MissingMetricSpecKeyError',
                        'Elixir.Prometheus.Model',
                        'Elixir.Prometheus.NoBucketsError',
                        'Elixir.Prometheus.Registry',
                        'Elixir.Prometheus.UnknownMetricError']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,logger,mnesia,prometheus]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,chronus,
                  [{description,"chronus"},
                   {vsn,"0.1.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Chronus.AMQPService',
                        'Elixir.Chronus.Application',
                        'Elixir.Chronus.CacheServer',
                        'Elixir.Chronus.ListScheduledMessages',
                        'Elixir.Chronus.MessageController',
                        'Elixir.Chronus.MessageServer',
                        'Elixir.Chronus.MyPlug',
                        'Elixir.Chronus.ScheduledMessage',
                        'Elixir.Chronus.Scheduler',
                        'Elixir.Chronus.ServerProcess',
                        'Elixir.Jason.Encoder.Chronus.ScheduledMessage']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,amqp,bandit,jason,logger,
                        prometheus_ex]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Chronus.Application',[]}}]}]}},
     {progress,applications_loaded},
     {apply,{application,start_boot,[kernel,permanent]}},
     {apply,{application,start_boot,[stdlib,permanent]}},
     {progress,started}]}.
